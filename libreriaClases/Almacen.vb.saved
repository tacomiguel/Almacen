<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE abiword PUBLIC "-//ABISOURCE//DTD AWML 1.0 Strict//EN" "http://www.abisource.com/awml.dtd">
<abiword template="false" xmlns:ct="http://www.abisource.com/changetracking.dtd" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:math="http://www.w3.org/1998/Math/MathML" xid-max="269" xmlns:dc="http://purl.org/dc/elements/1.1/" fileformat="1.1" xmlns:svg="http://www.w3.org/2000/svg" xmlns:awml="http://www.abisource.com/awml.dtd" xmlns="http://www.abisource.com/awml.dtd" xmlns:xlink="http://www.w3.org/1999/xlink" version="2.9.2" xml:space="preserve" props="dom-dir:ltr; document-footnote-restart-section:0; document-endnote-type:numeric; document-endnote-place-enddoc:1; document-endnote-initial:1; lang:es-PE; document-endnote-restart-section:0; document-footnote-restart-page:0; document-footnote-type:numeric; document-footnote-initial:1; document-endnote-place-endsection:0">
<!-- ======================================================================== -->
<!-- This file is an AbiWord document.                                        -->
<!-- AbiWord is a free, Open Source word processor.                           -->
<!-- More information about AbiWord is available at http://www.abisource.com/ -->
<!-- You should not edit this file by hand.                                   -->
<!-- ======================================================================== -->

<metadata>
<m key="abiword.generator">AbiWord</m>
<m key="dc.format">application/x-abiword</m>
</metadata>
<rdf>
</rdf>
<styles>
<s type="P" name="Normal" basedon="" followedby="Current Settings" props="font-family:Times New Roman; margin-top:0pt; font-variant:normal; margin-left:0pt; text-indent:0in; widows:2; font-style:normal; font-weight:normal; text-decoration:none; color:000000; line-height:1.0; text-align:left; margin-bottom:0pt; text-position:normal; margin-right:0pt; bgcolor:transparent; font-size:12pt; font-stretch:normal"/>
</styles>
<pagesize pagetype="A4" orientation="portrait" width="210.000000" height="297.000000" units="mm" page-scale="1.000000"/>
<section xid="1">
<p style="Normal" xid="2" props="text-align:left; dom-dir:ltr">Imports MySql.Data.MySqlClient</p>
<p style="Normal" xid="3" props="text-align:left; dom-dir:ltr">Public Class Almacen</p>
<p style="Normal" xid="4" props="text-align:left; dom-dir:ltr">    Public Shared Function dsAlmacen() As DataSet</p>
<p style="Normal" xid="5" props="text-align:left; dom-dir:ltr">        'declaramos la variable local ds</p>
<p style="Normal" xid="6" props="text-align:left; dom-dir:ltr">        'de tipo DataSet con el nombre Catalogo</p>
<p style="Normal" xid="7" props="text-align:left; dom-dir:ltr">        Dim ds As New DataSet("almacen")</p>
<p style="Normal" xid="8" props="text-align:left; dom-dir:ltr">        'a√±adimos el DataTable al DataSet</p>
<p style="Normal" xid="9" props="text-align:left; dom-dir:ltr">        ds.Tables.Add(dtAlmacen())</p>
<p style="Normal" xid="10" props="text-align:left; dom-dir:ltr">        Return ds</p>
<p style="Normal" xid="11" props="text-align:left; dom-dir:ltr">    End Function</p>
<p style="Normal" xid="12" props="text-align:left; dom-dir:ltr">    Public Shared Function dtAlmacen() As DataTable</p>
<p style="Normal" xid="13" props="text-align:left; dom-dir:ltr">        'declaramos la variable local dtArticulo</p>
<p style="Normal" xid="14" props="text-align:left; dom-dir:ltr">        'de tipo DataTable y nombre "articulo"</p>
<p style="Normal" xid="15" props="text-align:left; dom-dir:ltr">        Dim dt As New DataTable("almacen")</p>
<p style="Normal" xid="16" props="text-align:left; dom-dir:ltr">        'creamos las columnas del DataTable dtArticulo</p>
<p style="Normal" xid="17" props="text-align:left; dom-dir:ltr">        dt.Columns.Add(New DataColumn("cod_alma", GetType(String)))</p>
<p style="Normal" xid="18" props="text-align:left; dom-dir:ltr">        dt.Columns.Add(New DataColumn("nom_alma", GetType(String)))</p>
<p style="Normal" xid="19" props="text-align:left; dom-dir:ltr">        dt.Columns.Add(New DataColumn("cod_art", GetType(String)))</p>
<p style="Normal" xid="20" props="text-align:left; dom-dir:ltr">        dt.Columns.Add(New DataColumn("maximo", GetType(Decimal)))</p>
<p style="Normal" xid="21" props="text-align:left; dom-dir:ltr">        dt.Columns.Add(New DataColumn("minimo", GetType(Decimal)))</p>
<p style="Normal" xid="22" props="text-align:left; dom-dir:ltr">        dt.Columns.Add(New DataColumn("activo", GetType(Boolean)))</p>
<p style="Normal" xid="23" props="text-align:left; dom-dir:ltr">        Return dt</p>
<p style="Normal" xid="24" props="text-align:left; dom-dir:ltr">    End Function</p>
<p style="Normal" xid="25" props="text-align:left; dom-dir:ltr">    Public Function recuperaMaximos_xArea(ByVal c1 As String) As DataSet</p>
<p style="Normal" xid="26" props="text-align:left; dom-dir:ltr">        'no se incluyen las producciones</p>
<p style="Normal" xid="27" props="text-align:left; dom-dir:ltr">        Dim clConex As MySqlConnection = Conexion.obtenerConexion</p>
<p style="Normal" xid="28" props="text-align:left; dom-dir:ltr">        Dim da As New MySqlDataAdapter</p>
<p style="Normal" xid="29" props="text-align:left; dom-dir:ltr">        Dim dsMaximos As New DataSet</p>
<p style="Normal" xid="30" props="text-align:left; dom-dir:ltr">        Dim cad, cad1, cad2, cad3, cad4 As String</p>
<p style="Normal" xid="31" props="text-align:left; dom-dir:ltr">        cad1 = " select articulo.cod_art,nom_art,nom_uni,maximo,minimo,art_area.max,art_area.min,art_area.cod_area"</p>
<p style="Normal" xid="32" props="text-align:left; dom-dir:ltr">        cad2 = " from articulo inner join unidad on articulo.cod_uni=unidad.cod_uni"</p>
<p style="Normal" xid="33" props="text-align:left; dom-dir:ltr">        cad3 = " left join art_area on articulo.cod_art=art_area.cod_art"</p>
<p style="Normal" xid="34" props="text-align:left; dom-dir:ltr">        cad4 = " where art_area.cod_area='" &amp; c1 &amp; "'" _</p>
<p style="Normal" xid="35" props="text-align:left; dom-dir:ltr">                &amp; " and articulo.activo=1 order by nom_art"</p>
<p style="Normal" xid="36" props="text-align:left; dom-dir:ltr">        cad = cad1 + cad2 + cad3 + cad4</p>
<p style="Normal" xid="37" props="text-align:left; dom-dir:ltr">        Dim comSaldo As New MySqlCommand(cad)</p>
<p style="Normal" xid="38" props="text-align:left; dom-dir:ltr">        comSaldo.Connection = clConex</p>
<p style="Normal" xid="39" props="text-align:left; dom-dir:ltr">        da.SelectCommand = comSaldo</p>
<p style="Normal" xid="40" props="text-align:left; dom-dir:ltr">        da.Fill(dsMaximos, "maximos")</p>
<p style="Normal" xid="41" props="text-align:left; dom-dir:ltr">        clConex.Close()</p>
<p style="Normal" xid="42" props="text-align:left; dom-dir:ltr">        Return dsMaximos</p>
<p style="Normal" xid="43" props="text-align:left; dom-dir:ltr">    End Function</p>
<p style="Normal" xid="44" props="text-align:left; dom-dir:ltr">    Public Function existeEnIngreso(ByVal c1 As String) As Boolean</p>
<p style="Normal" xid="45" props="text-align:left; dom-dir:ltr">        Dim clConex As MySqlConnection = Conexion.obtenerConexion</p>
<p style="Normal" xid="46" props="text-align:left; dom-dir:ltr">        Dim com As New MySqlCommand, result As Integer, cad As String</p>
<p style="Normal" xid="47" props="text-align:left; dom-dir:ltr">        com.Connection = clConex</p>
<p style="Normal" xid="48" props="text-align:left; dom-dir:ltr">        cad = "Select cod_alma from ingreso where c1='" &amp; c1 &amp; "'"</p>
<p style="Normal" xid="49" props="text-align:left; dom-dir:ltr">        com.CommandText = cad</p>
<p style="Normal" xid="50" props="text-align:left; dom-dir:ltr">        result = com.ExecuteScalar</p>
<p style="Normal" xid="51" props="text-align:left; dom-dir:ltr">        clConex.Close()</p>
<p style="Normal" xid="52" props="text-align:left; dom-dir:ltr">        If result = 0 Then</p>
<p style="Normal" xid="53" props="text-align:left; dom-dir:ltr">            Return False</p>
<p style="Normal" xid="54" props="text-align:left; dom-dir:ltr">        Else</p>
<p style="Normal" xid="55" props="text-align:left; dom-dir:ltr">            Return True</p>
<p style="Normal" xid="56" props="text-align:left; dom-dir:ltr">        End If</p>
<p style="Normal" xid="57" props="text-align:left; dom-dir:ltr">    End Function</p>
<p style="Normal" xid="58" props="text-align:left; dom-dir:ltr">    Public Function existeEnIngresoHistorial(ByVal cod_alma As String) As Boolean</p>
<p style="Normal" xid="59" props="text-align:left; dom-dir:ltr">        Dim clConex As MySqlConnection = Conexion.obtenerConexion</p>
<p style="Normal" xid="60" props="text-align:left; dom-dir:ltr">        Dim com As New MySqlCommand, result As Integer, cad As String</p>
<p style="Normal" xid="61" props="text-align:left; dom-dir:ltr">        com.Connection = clConex</p>
<p style="Normal" xid="62" props="text-align:left; dom-dir:ltr">        cad = "Select cod_alma from h_ingreso where cod_alma='" &amp; cod_alma &amp; "'"</p>
<p style="Normal" xid="63" props="text-align:left; dom-dir:ltr">        com.CommandText = cad</p>
<p style="Normal" xid="64" props="text-align:left; dom-dir:ltr">        result = com.ExecuteScalar</p>
<p style="Normal" xid="65" props="text-align:left; dom-dir:ltr">        clConex.Close()</p>
<p style="Normal" xid="66" props="text-align:left; dom-dir:ltr">        If result = 0 Then</p>
<p style="Normal" xid="67" props="text-align:left; dom-dir:ltr">            Return False</p>
<p style="Normal" xid="68" props="text-align:left; dom-dir:ltr">        Else</p>
<p style="Normal" xid="69" props="text-align:left; dom-dir:ltr">            Return True</p>
<p style="Normal" xid="70" props="text-align:left; dom-dir:ltr">        End If</p>
<p style="Normal" xid="71" props="text-align:left; dom-dir:ltr">    End Function</p>
<p style="Normal" xid="72" props="text-align:left; dom-dir:ltr">    Public Function existeEnSalida(ByVal c1 As String) As Boolean</p>
<p style="Normal" xid="73" props="text-align:left; dom-dir:ltr">        Dim clConex As MySqlConnection = Conexion.obtenerConexion</p>
<p style="Normal" xid="74" props="text-align:left; dom-dir:ltr">        Dim com As New MySqlCommand, result As Integer, cad As String</p>
<p style="Normal" xid="75" props="text-align:left; dom-dir:ltr">        com.Connection = clConex</p>
<p style="Normal" xid="76" props="text-align:left; dom-dir:ltr">        cad = "Select cod_alma from salida where cod_alma='" &amp; c1 &amp; "'"</p>
<p style="Normal" xid="77" props="text-align:left; dom-dir:ltr">        com.CommandText = cad</p>
<p style="Normal" xid="78" props="text-align:left; dom-dir:ltr">        result = com.ExecuteScalar</p>
<p style="Normal" xid="79" props="text-align:left; dom-dir:ltr">        clConex.Close()</p>
<p style="Normal" xid="80" props="text-align:left; dom-dir:ltr">        If result = 0 Then</p>
<p style="Normal" xid="81" props="text-align:left; dom-dir:ltr">            Return False</p>
<p style="Normal" xid="82" props="text-align:left; dom-dir:ltr">        Else</p>
<p style="Normal" xid="83" props="text-align:left; dom-dir:ltr">            Return True</p>
<p style="Normal" xid="84" props="text-align:left; dom-dir:ltr">        End If</p>
<p style="Normal" xid="85" props="text-align:left; dom-dir:ltr">    End Function</p>
<p style="Normal" xid="86" props="text-align:left; dom-dir:ltr">    Public Function insertaMaximos(ByVal c1 As String, ByVal c2 As String, _</p>
<p style="Normal" xid="87" props="text-align:left; dom-dir:ltr">                            ByVal m1 As Decimal, ByVal m2 As Decimal) As Boolean</p>
<p style="Normal" xid="88" props="text-align:left; dom-dir:ltr">        Dim clConex As MySqlConnection = Conexion.obtenerConexion</p>
<p style="Normal" xid="89" props="text-align:left; dom-dir:ltr">        Dim com As New MySqlCommand</p>
<p style="Normal" xid="90" props="text-align:left; dom-dir:ltr">        com.Connection = clConex</p>
<p style="Normal" xid="91" props="text-align:left; dom-dir:ltr">        Dim cad, cad1, cad2 As String, result As Integer</p>
<p style="Normal" xid="92" props="text-align:left; dom-dir:ltr">        cad1 = "Insert into art_area(cod_art,cod_area,max,min)"</p>
<p style="Normal" xid="93" props="text-align:left; dom-dir:ltr">        cad2 = " values('" &amp; c1 &amp; "','" &amp; c2 &amp; "'," &amp; m1 &amp; "," &amp; m2 &amp; ")"</p>
<p style="Normal" xid="94" props="text-align:left; dom-dir:ltr">        cad = cad1 + cad2</p>
<p style="Normal" xid="95" props="text-align:left; dom-dir:ltr">        com.CommandText = cad</p>
<p style="Normal" xid="96" props="text-align:left; dom-dir:ltr">        result = com.ExecuteNonQuery</p>
<p style="Normal" xid="97" props="text-align:left; dom-dir:ltr">        clConex.Close()</p>
<p style="Normal" xid="98" props="text-align:left; dom-dir:ltr">        Return result</p>
<p style="Normal" xid="99" props="text-align:left; dom-dir:ltr">    End Function</p>
<p style="Normal" xid="100" props="text-align:left; dom-dir:ltr">    Public Function actualizaMaximos(ByVal c1 As String, ByVal c2 As String, _</p>
<p style="Normal" xid="101" props="text-align:left; dom-dir:ltr">                                ByVal maximo As Decimal, ByVal minimo As Decimal) As Boolean</p>
<p style="Normal" xid="102" props="text-align:left; dom-dir:ltr">        Dim clConex As MySqlConnection = Conexion.obtenerConexion</p>
<p style="Normal" xid="103" props="text-align:left; dom-dir:ltr">        Dim com As New MySqlCommand</p>
<p style="Normal" xid="104" props="text-align:left; dom-dir:ltr">        com.Connection = clConex</p>
<p style="Normal" xid="105" props="text-align:left; dom-dir:ltr">        Dim cad, cad1, cad2 As String, result As Integer</p>
<p style="Normal" xid="106" props="text-align:left; dom-dir:ltr">        cad1 = "update art_area set max=" &amp; maximo &amp; ", min=" &amp; minimo</p>
<p style="Normal" xid="107" props="text-align:left; dom-dir:ltr">        cad2 = " where cod_art='" &amp; c1 &amp; "' and cod_area='" &amp; c2 &amp; "'"</p>
<p style="Normal" xid="108" props="text-align:left; dom-dir:ltr">        cad = cad1 + cad2</p>
<p style="Normal" xid="109" props="text-align:left; dom-dir:ltr">        com.CommandText = cad</p>
<p style="Normal" xid="110" props="text-align:left; dom-dir:ltr">        result = com.ExecuteNonQuery</p>
<p style="Normal" xid="111" props="text-align:left; dom-dir:ltr">        clConex.Close()</p>
<p style="Normal" xid="112" props="text-align:left; dom-dir:ltr">        Return result</p>
<p style="Normal" xid="113" props="text-align:left; dom-dir:ltr">    End Function</p>
<p style="Normal" xid="114" props="text-align:left; dom-dir:ltr">    Public Function existeMaximos(ByVal c1 As String, ByVal c2 As String) As Boolean</p>
<p style="Normal" xid="115" props="text-align:left; dom-dir:ltr">        Dim clConex As MySqlConnection = Conexion.obtenerConexion</p>
<p style="Normal" xid="116" props="text-align:left; dom-dir:ltr">        Dim com As New MySqlCommand, result As Integer, cad As String</p>
<p style="Normal" xid="117" props="text-align:left; dom-dir:ltr">        com.Connection = clConex</p>
<p style="Normal" xid="118" props="text-align:left; dom-dir:ltr">        cad = "Select count(cod_area) from art_area where cod_area='" &amp; c1 &amp; "' and cod_art='" &amp; c2 &amp; "'"</p>
<p style="Normal" xid="119" props="text-align:left; dom-dir:ltr">        com.CommandText = cad</p>
<p style="Normal" xid="120" props="text-align:left; dom-dir:ltr">        result = com.ExecuteScalar</p>
<p style="Normal" xid="121" props="text-align:left; dom-dir:ltr">        clConex.Close()</p>
<p style="Normal" xid="122" props="text-align:left; dom-dir:ltr">        If result = 0 Then</p>
<p style="Normal" xid="123" props="text-align:left; dom-dir:ltr">            Return False</p>
<p style="Normal" xid="124" props="text-align:left; dom-dir:ltr">        Else</p>
<p style="Normal" xid="125" props="text-align:left; dom-dir:ltr">            Return True</p>
<p style="Normal" xid="126" props="text-align:left; dom-dir:ltr">        End If</p>
<p style="Normal" xid="127" props="text-align:left; dom-dir:ltr">    End Function</p>
<p style="Normal" xid="128" props="text-align:left; dom-dir:ltr">    Public Function esDeProduccion(Optional ByVal c As String = "") As Boolean</p>
<p style="Normal" xid="129" props="text-align:left; dom-dir:ltr">        Return True</p>
<p style="Normal" xid="130" props="text-align:left; dom-dir:ltr">    End Function</p>
<p style="Normal" xid="131" props="text-align:left; dom-dir:ltr">    Public Function esDeCompras(Optional ByVal c As String = "") As Boolean</p>
<p style="Normal" xid="132" props="text-align:left; dom-dir:ltr">        Return True</p>
<p style="Normal" xid="133" props="text-align:left; dom-dir:ltr">    End Function</p>
<p style="Normal" xid="134" props="text-align:left; dom-dir:ltr">    Public Function devuelveAlmacenCatalogo(ByVal c As String) As String</p>
<p style="Normal" xid="135" props="text-align:left; dom-dir:ltr">        Dim clConex As MySqlConnection = Conexion.obtenerConexion</p>
<p style="Normal" xid="136" props="text-align:left; dom-dir:ltr">        Dim com As New MySqlCommand, result As String, cad As String</p>
<p style="Normal" xid="137" props="text-align:left; dom-dir:ltr">        com.Connection = clConex</p>
<p style="Normal" xid="138" props="text-align:left; dom-dir:ltr">        cad = "Select almaCatalogo from almacen where cod_alma='" &amp; c &amp; "'"</p>
<p style="Normal" xid="139" props="text-align:left; dom-dir:ltr">        com.CommandText = cad</p>
<p style="Normal" xid="140" props="text-align:left; dom-dir:ltr">        result = com.ExecuteScalar</p>
<p style="Normal" xid="141" props="text-align:left; dom-dir:ltr">        clConex.Close()</p>
<p style="Normal" xid="142" props="text-align:left; dom-dir:ltr">        Return result</p>
<p style="Normal" xid="143" props="text-align:left; dom-dir:ltr">    End Function</p>
<p style="Normal" xid="144" props="text-align:left; dom-dir:ltr">    Public Function devuelveAlmacenPrincipal() As String</p>
<p style="Normal" xid="145" props="text-align:left; dom-dir:ltr">        Return "0001"</p>
<p style="Normal" xid="146" props="text-align:left; dom-dir:ltr">    End Function</p>
<p style="Normal" xid="147" props="text-align:left; dom-dir:ltr">    Public Function devAlmacenVentas() As DataSet</p>
<p style="Normal" xid="148" props="text-align:left; dom-dir:ltr">        Dim clConex As MySqlConnection = Conexion.obtenerConexion</p>
<p style="Normal" xid="149" props="text-align:left; dom-dir:ltr">        Dim com As New MySqlCommand</p>
<p style="Normal" xid="150" props="text-align:left; dom-dir:ltr">        Dim da As New MySqlDataAdapter</p>
<p style="Normal" xid="151" props="text-align:left; dom-dir:ltr">        Dim ds As New DataSet</p>
<p style="Normal" xid="152" props="text-align:left; dom-dir:ltr">        com.Connection = clConex</p>
<p style="Normal" xid="153" props="text-align:left; dom-dir:ltr">        Dim cad As String</p>
<p style="Normal" xid="154" props="text-align:left; dom-dir:ltr">        cad = "select cod_alma,nom_alma from almacen where (esVentas)"</p>
<p style="Normal" xid="155" props="text-align:left; dom-dir:ltr">        com.CommandText = cad</p>
<p style="Normal" xid="156" props="text-align:left; dom-dir:ltr">        da.SelectCommand = com</p>
<p style="Normal" xid="157" props="text-align:left; dom-dir:ltr">        da.Fill(ds, "almacen")</p>
<p style="Normal" xid="158" props="text-align:left; dom-dir:ltr">        clConex.Close()</p>
<p style="Normal" xid="159" props="text-align:left; dom-dir:ltr">        Return ds</p>
<p style="Normal" xid="160" props="text-align:left; dom-dir:ltr">    End Function</p>
<p style="Normal" xid="161" props="text-align:left; dom-dir:ltr">    Public Function tieneArticulos(ByVal c As String) As Boolean</p>
<p style="Normal" xid="162" props="text-align:left; dom-dir:ltr">        Dim clConex As MySqlConnection = Conexion.obtenerConexion</p>
<p style="Normal" xid="163" props="text-align:left; dom-dir:ltr">        Dim com As New MySqlCommand, result As Integer, cad As String</p>
<p style="Normal" xid="164" props="text-align:left; dom-dir:ltr">        com.Connection = clConex</p>
<p style="Normal" xid="165" props="text-align:left; dom-dir:ltr">        cad = "Select cod_alma from articulo where cod_alma='" &amp; c &amp; "'"</p>
<p style="Normal" xid="166" props="text-align:left; dom-dir:ltr">        com.CommandText = cad</p>
<p style="Normal" xid="167" props="text-align:left; dom-dir:ltr">        result = com.ExecuteScalar</p>
<p style="Normal" xid="168" props="text-align:left; dom-dir:ltr">        clConex.Close()</p>
<p style="Normal" xid="169" props="text-align:left; dom-dir:ltr">        If result = 0 Then</p>
<p style="Normal" xid="170" props="text-align:left; dom-dir:ltr">            Return False</p>
<p style="Normal" xid="171" props="text-align:left; dom-dir:ltr">        Else</p>
<p style="Normal" xid="172" props="text-align:left; dom-dir:ltr">            Return True</p>
<p style="Normal" xid="173" props="text-align:left; dom-dir:ltr">        End If</p>
<p style="Normal" xid="174" props="text-align:left; dom-dir:ltr">    End Function</p>
<p style="Normal" xid="175" props="text-align:left; dom-dir:ltr">    Public Function existeArticulo_deAlmaGeneral(ByVal c1 As String, ByVal c2 As String) As Boolean</p>
<p style="Normal" xid="176" props="text-align:left; dom-dir:ltr">        Dim clConex As MySqlConnection = Conexion.obtenerConexion</p>
<p style="Normal" xid="177" props="text-align:left; dom-dir:ltr">        Dim com As New MySqlCommand, result As Integer, cad As String</p>
<p style="Normal" xid="178" props="text-align:left; dom-dir:ltr">        com.Connection = clConex</p>
<p style="Normal" xid="179" props="text-align:left; dom-dir:ltr">        cad = "Select count(cod_art) from art_relaAlmacenes where cod_alma='" &amp; c1 &amp; "' and cod_art='" &amp; c2 &amp; "'"</p>
<p style="Normal" xid="180" props="text-align:left; dom-dir:ltr">        com.CommandText = cad</p>
<p style="Normal" xid="181" props="text-align:left; dom-dir:ltr">        result = com.ExecuteScalar</p>
<p style="Normal" xid="182" props="text-align:left; dom-dir:ltr">        clConex.Close()</p>
<p style="Normal" xid="183" props="text-align:left; dom-dir:ltr">        If result = 0 Then</p>
<p style="Normal" xid="184" props="text-align:left; dom-dir:ltr">            Return False</p>
<p style="Normal" xid="185" props="text-align:left; dom-dir:ltr">        Else</p>
<p style="Normal" xid="186" props="text-align:left; dom-dir:ltr">            Return True</p>
<p style="Normal" xid="187" props="text-align:left; dom-dir:ltr">        End If</p>
<p style="Normal" xid="188" props="text-align:left; dom-dir:ltr">    End Function</p>
<p style="Normal" xid="189" props="text-align:left; dom-dir:ltr">    Public Function relacionaArticulos(ByVal c1 As String, ByVal c2 As String, ByVal c3 As String) As Boolean</p>
<p style="Normal" xid="190" props="text-align:left; dom-dir:ltr">        Dim clConex As MySqlConnection = Conexion.obtenerConexion</p>
<p style="Normal" xid="191" props="text-align:left; dom-dir:ltr">        Dim com As New MySqlCommand</p>
<p style="Normal" xid="192" props="text-align:left; dom-dir:ltr">        com.Connection = clConex</p>
<p style="Normal" xid="193" props="text-align:left; dom-dir:ltr">        Dim cad, cad1, cad2 As String, result As Integer</p>
<p style="Normal" xid="194" props="text-align:left; dom-dir:ltr">        cad1 = "Insert into art_relaalmacenes(cod_alma,cod_artalma,cod_art,activo)"</p>
<p style="Normal" xid="195" props="text-align:left; dom-dir:ltr">        cad2 = " values('" &amp; c1 &amp; "','" &amp; c2 &amp; "','" &amp; c3 &amp; "'," &amp; " 1)"</p>
<p style="Normal" xid="196" props="text-align:left; dom-dir:ltr">        cad = cad1 + cad2</p>
<p style="Normal" xid="197" props="text-align:left; dom-dir:ltr">        com.CommandText = cad</p>
<p style="Normal" xid="198" props="text-align:left; dom-dir:ltr">        result = com.ExecuteNonQuery</p>
<p style="Normal" xid="199" props="text-align:left; dom-dir:ltr">        clConex.Close()</p>
<p style="Normal" xid="200" props="text-align:left; dom-dir:ltr">        Return result</p>
<p style="Normal" xid="201" props="text-align:left; dom-dir:ltr">    End Function</p>
<p style="Normal" xid="202" props="text-align:left; dom-dir:ltr">    Public Function eliminaRelacionArticulos(Optional ByVal c1 As String = "", Optional ByVal c2 As String = "", Optional ByVal c3 As String = "") As Boolean</p>
<p style="Normal" xid="203" props="text-align:left; dom-dir:ltr">        Return True</p>
<p style="Normal" xid="204" props="text-align:left; dom-dir:ltr">    End Function</p>
<p style="Normal" xid="205" props="text-align:left; dom-dir:ltr">    Public Function muestraArticulosRelacionados(ByVal c1 As String, ByVal c2 As String) As DataSet</p>
<p style="Normal" xid="206" props="text-align:left; dom-dir:ltr">        Dim clConex As MySqlConnection = Conexion.obtenerConexion</p>
<p style="Normal" xid="207" props="text-align:left; dom-dir:ltr">        Dim da As New MySqlDataAdapter</p>
<p style="Normal" xid="208" props="text-align:left; dom-dir:ltr">        Dim ds As New DataSet</p>
<p style="Normal" xid="209" props="text-align:left; dom-dir:ltr">        Dim cad, cad1, cad2, cad3 As String</p>
<p style="Normal" xid="210" props="text-align:left; dom-dir:ltr">        cad1 = "select a.cod_art,a.nom_art,u.nom_uni,ar.activo,ar.cod_alma,ar.cod_artAlma "</p>
<p style="Normal" xid="211" props="text-align:left; dom-dir:ltr">        cad2 = " from art_relaalmacenes ar inner join articulo a on ar.cod_art=a.cod_art inner join unidad u on u.cod_uni=a.cod_uni"</p>
<p style="Normal" xid="212" props="text-align:left; dom-dir:ltr">        cad3 = " where ar.cod_alma='" &amp; c1 &amp; "' and ar.cod_artAlma='" &amp; c2 &amp; "'"</p>
<p style="Normal" xid="213" props="text-align:left; dom-dir:ltr">        cad = cad1 + cad2 + cad3</p>
<p style="Normal" xid="214" props="text-align:left; dom-dir:ltr">        Dim com As New MySqlCommand(cad)</p>
<p style="Normal" xid="215" props="text-align:left; dom-dir:ltr">        com.Connection = clConex</p>
<p style="Normal" xid="216" props="text-align:left; dom-dir:ltr">        da.SelectCommand = com</p>
<p style="Normal" xid="217" props="text-align:left; dom-dir:ltr">        da.Fill(ds, "articulo")</p>
<p style="Normal" xid="218" props="text-align:left; dom-dir:ltr">        clConex.Close()</p>
<p style="Normal" xid="219" props="text-align:left; dom-dir:ltr">        Return ds</p>
<p style="Normal" xid="220" props="text-align:left; dom-dir:ltr">    End Function</p>
<p style="Normal" xid="221" props="text-align:left; dom-dir:ltr">    Public Function muestraArticuloRelacionado(Optional ByVal c1 As String = "", Optional ByVal c2 As String = "") As String</p>
<p style="Normal" xid="222" props="text-align:left; dom-dir:ltr">        Return ""</p>
<p style="Normal" xid="223" props="text-align:left; dom-dir:ltr">    End Function</p>
<p style="Normal" xid="224" props="text-align:left; dom-dir:ltr">    Public Function devuelveCodigoArtRelacionado(ByVal c1 As String, ByVal c2 As String) As String</p>
<p style="Normal" xid="225" props="text-align:left; dom-dir:ltr">        Dim clConex As MySqlConnection = Conexion.obtenerConexion</p>
<p style="Normal" xid="226" props="text-align:left; dom-dir:ltr">        Dim com As New MySqlCommand, result As String, cad As String</p>
<p style="Normal" xid="227" props="text-align:left; dom-dir:ltr">        com.Connection = clConex</p>
<p style="Normal" xid="228" props="text-align:left; dom-dir:ltr">        cad = "select cod_artAlma from art_relaalmacenes where cod_art='" &amp; c1 &amp; "' and cod_alma='" &amp; c2 &amp; "'"</p>
<p style="Normal" xid="229" props="text-align:left; dom-dir:ltr">        com.CommandText = cad</p>
<p style="Normal" xid="230" props="text-align:left; dom-dir:ltr">        result = com.ExecuteScalar</p>
<p style="Normal" xid="231" props="text-align:left; dom-dir:ltr">        clConex.Close()</p>
<p style="Normal" xid="232" props="text-align:left; dom-dir:ltr">        Return result</p>
<p style="Normal" xid="233" props="text-align:left; dom-dir:ltr">    End Function</p>
<p style="Normal" xid="234" props="text-align:left; dom-dir:ltr">    Public Function devuelveCodigoArtPrinRelacionado(Optional ByVal c1 As String = "") As String</p>
<p style="Normal" xid="235" props="text-align:left; dom-dir:ltr">        Return ""</p>
<p style="Normal" xid="236" props="text-align:left; dom-dir:ltr">    End Function</p>
<p style="Normal" xid="237" props="text-align:left; dom-dir:ltr">    'Public Function existeCodigoRelacionado(ByVal c As String, ByVal c As String) As Boolean</p>
<p style="Normal" xid="238" props="text-align:left; dom-dir:ltr">    '    Dim clConex As MySqlConnection = Conexion.obtenerConexion</p>
<p style="Normal" xid="239" props="text-align:left; dom-dir:ltr">    '    Dim com As New MySqlCommand, result As Integer, cad As String</p>
<p style="Normal" xid="240" props="text-align:left; dom-dir:ltr">    '    com.Connection = clConex</p>
<p style="Normal" xid="241" props="text-align:left; dom-dir:ltr">    '    cad = "Select count(cod_art) from art_relaAlmacenes where cod_alma='" &amp; c1 &amp; "' and cod_art='" &amp; c2 &amp; "'"</p>
<p style="Normal" xid="242" props="text-align:left; dom-dir:ltr">    '    com.CommandText = cad</p>
<p style="Normal" xid="243" props="text-align:left; dom-dir:ltr">    '    result = com.ExecuteScalar</p>
<p style="Normal" xid="244" props="text-align:left; dom-dir:ltr">    '    clConex.Close()</p>
<p style="Normal" xid="245" props="text-align:left; dom-dir:ltr">    '    If result = 0 Then</p>
<p style="Normal" xid="246" props="text-align:left; dom-dir:ltr">    '        Return False</p>
<p style="Normal" xid="247" props="text-align:left; dom-dir:ltr">    '    Else</p>
<p style="Normal" xid="248" props="text-align:left; dom-dir:ltr">    '        Return True</p>
<p style="Normal" xid="249" props="text-align:left; dom-dir:ltr">    '    End If</p>
<p style="Normal" xid="250" props="text-align:left; dom-dir:ltr">    'End Function</p>
<p style="Normal" xid="251"><c></c></p>
<p style="Normal" xid="252" props="text-align:left; dom-dir:ltr">    Public Function devuelveCodigoRelacionado(Optional ByVal c1 As String = "") As String</p>
<p style="Normal" xid="253" props="text-align:left; dom-dir:ltr">        Return ""</p>
<p style="Normal" xid="254" props="text-align:left; dom-dir:ltr">    End Function</p>
<p style="Normal" xid="255" props="text-align:left; dom-dir:ltr">    Public Function devNombreAlmacen(ByVal c1 As String) As String</p>
<p style="Normal" xid="256" props="text-align:left; dom-dir:ltr">        Dim clConex As MySqlConnection = Conexion.obtenerConexion</p>
<p style="Normal" xid="257" props="text-align:left; dom-dir:ltr">        Dim com As New MySqlCommand, result As String, cad As String</p>
<p style="Normal" xid="258" props="text-align:left; dom-dir:ltr">        com.Connection = clConex</p>
<p style="Normal" xid="259" props="text-align:left; dom-dir:ltr">        cad = "Select nom_alma from almacen where cod_alma='" &amp; c1 &amp; "'"</p>
<p style="Normal" xid="260" props="text-align:left; dom-dir:ltr">        com.CommandText = cad</p>
<p style="Normal" xid="261" props="text-align:left; dom-dir:ltr">        result = com.ExecuteScalar</p>
<p style="Normal" xid="262" props="text-align:left; dom-dir:ltr">        clConex.Close()</p>
<p style="Normal" xid="263" props="text-align:left; dom-dir:ltr">        Return result</p>
<p style="Normal" xid="264" props="text-align:left; dom-dir:ltr">    End Function</p>
<p style="Normal" xid="265" props="text-align:left; dom-dir:ltr">    Public Function devArticuloPrincipalRelacionado(Optional ByVal c1 As String = "", Optional ByVal c2 As String = "") As String</p>
<p style="Normal" xid="266" props="text-align:left; dom-dir:ltr">        Return ""</p>
<p style="Normal" xid="267" props="text-align:left; dom-dir:ltr">    End Function</p>
<p style="Normal" xid="268" props="text-align:left; dom-dir:ltr">End Class</p>
<p style="Normal" xid="269"></p>
</section>
</abiword>
